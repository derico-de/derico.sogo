{
  // {{ ansible_managed }}
  // SOGo version: [{{ sogo_version }}]

  /* *********************  Main SOGo configuration file  **********************
   *                                                                           *
   * Since the content of this file is a dictionary in OpenStep plist format,  *
   * the curly braces enclosing the body of the configuration are mandatory.   *
   * See the Installation Guide for details on the format.                     *
   *                                                                           *
   * C and C++ style comments are supported.                                   *
   *                                                                           *
   * This example configuration contains only a subset of all available        *
   * configuration parameters. Please see the installation guide more details. *
   *                                                                           *
   * ~sogo/GNUstep/Defaults/.GNUstepDefaults has precedence over this file,    *
   * make sure to move it away to avoid unwanted parameter overrides.          *
   *                                                                           *
   * **************************************************************************/

  /* Database configuration (mysql:// or postgresql://) */
  SOGoProfileURL = "postgresql://{{sogo_pg_user}}:{{sogo_pg_pw}}@localhost:5432/sogo/sogo_user_profile";
  OCSFolderInfoURL = "postgresql://{{sogo_pg_user}}:{{sogo_pg_pw}}@localhost:5432/sogo/sogo_folder_info";
  OCSSessionsFolderURL = "postgresql://{{sogo_pg_user}}:{{sogo_pg_pw}}@localhost:5432/sogo/sogo_sessions_folder";

  /* Mail */
  SOGoDraftsFolderName = Drafts;
  SOGoSentFolderName = Sent;
  SOGoTrashFolderName = Trash;
  SOGoIMAPServer = "imaps://mail.lan:993";
  SOGoSieveServer = "sieve://mail.lan:4190/?tls=YES";
  SOGoSMTPServer = mail.lan;
  SOGoMailingMechanism = smtp;
  SOGoForceIMAPLoginWithEmail = YES;
  //SOGoMailSpoolPath = /var/spool/sogo;
  NGImap4ConnectionStringSeparator = ".";

  /* Notifications */
  SOGoAppointmentSendEMailNotifications = YES;
  SOGoACLsSendEMailNotifications = YES;
  SOGoFoldersSendEMailNotifications = YES;

  /* Authentication */
  SOGoPasswordChangeEnabled = NO;


  /* SQL authentication example */
  /*  These database columns MUST be present in the view/table:
   *    c_uid - will be used for authentication -  it's the username or username@domain.tld)
   *    c_name - which can be identical to c_uid -  will be used to uniquely identify entries
   *    c_password - password of the user, plain-text, md5 or sha encoded for now
   *    c_cn - the user's common name - such as "John Doe"
   *    mail - the user's mail address
   *  See the installation guide for more details
   */
  //SOGoUserSources = (
  //  {
  //    type = sql;
  //    id = ih_global_dir;
  //    DomainFieldName = "domain";
  //    viewURL = "postgresql://{{ mc_sogo_pg_user }}:{{ mc_sogo_pg_pw }}@mail.lan:5432/exim_test1/sogo_users";
  //    canAuthenticate = YES;
  //    isAddressBook = YES;
  //    userPasswordAlgorithm = ssha;
  //  }
  //);

  /*  To isolate domains from each other we use the multi-domains config here.
      So every user in SOGo sees only users of her domain in the auto completion fields.
      To bridge domains, so that users from one domain can also see users from the other domain, see SOGoDomainsVisibility.
      Every array groups some domains together like:

        SOGoDomainsVisibility = (
          ( planetcrazy_de, derico_de, derstappen-it_de ),
        );

  */


  domains = {
    derico_de = {
      SOGoMailDomain = derico.de;
      SOGoUserSources = (
        {
          type = sql;
          id = derico_dir;
          DomainFieldName = "domain";
          viewURL = "postgresql://{{ mc_sogo_pg_user }}:{{ mc_sogo_pg_pw }}@mail.lan:5432/exim_test1/sogo_users";
          canAuthenticate = YES;
          isAddressBook = YES;
          userPasswordAlgorithm = ssha;
        }
      );
    };
    planetcrazy_de = {
      SOGoMailDomain = planetcrazy.de;
      SOGoUserSources = (
        {
          type = sql;
          id = planetcrazy_dir;
          DomainFieldName = "domain";
          viewURL = "postgresql://{{ mc_sogo_pg_user }}:{{ mc_sogo_pg_pw }}@mail.lan:5432/exim_test1/sogo_users";
          canAuthenticate = YES;
          isAddressBook = YES;
          userPasswordAlgorithm = ssha;
        }
      );
    };
  };

  SOGoDomainsVisibility = (
    ( planetcrazy_de, derico_de),
  );


  /* Web Interface */
  SOGoPageTitle = "Inqbus Hosting - Groupware";
  //SOGoVacationEnabled = YES;
  SOGoForwardEnabled = YES;
  SOGoSieveScriptsEnabled = YES;
  SOGoMailAuxiliaryUserAccountsEnabled = YES;
  //SOGoTrustProxyAuthentication = NO;
  SOGoXSRFValidationEnabled = YES;
  SOGoFirstDayOfWeek = 1;
  SOGoCalendarEventsDefaultClassification = CONFIDENTIAL;
  SOGoCalendarTasksDefaultClassification = CONFIDENTIAL;
  SOGoCalendarDefaultReminder = -PT15M;
  SOGoMailComposeMessageType = html;

  /* General */
  SOGoLanguage = German;
  SOGoTimeZone = Europ/Berlin;
  //SOGoCalendarDefaultRoles = (
  //  PublicDAndTViewer,
  //  ConfidentialDAndTViewer
  //);
  //SOGoSuperUsernames = (sogo1, sogo2); // This is an array - keep the parens!
  //SxVMemLimit = 384;
  //WOPidFile = "/var/run/sogo/sogo.pid";
  //SOGoMemcachedHost = "/var/run/memcached.sock";

  /* Debug */
  //SOGoDebugRequests = YES;
  //SoDebugBaseURL = YES;
  //ImapDebugEnabled = YES;
  //LDAPDebugEnabled = YES;
  //PGDebugEnabled = YES;
  //MySQL4DebugEnabled = YES;
  //SOGoUIxDebugEnabled = YES;
  //WODontZipResponse = YES;
  WOLogFile = /var/log/sogo/sogo.log;
}
